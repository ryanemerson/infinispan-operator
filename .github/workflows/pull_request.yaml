name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - gh_action_ci
  pull_request:

env:
  CONFIG_LISTENER_IMAGE: localhost:5001/infinispan-operator
  KUBECONFIG: ${{ github.workspace }}/kind-kube-config.yaml
  TESTING_LOG_DIR: ${{ github.workspace }}/test/reports

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Init variables action variables
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      # Cache local bin dependencies
      - name: Local Dependencies Cache
        uses: actions/cache@v2
        with:
          path: bin
          key: ${{ runner.os }}-bin-${{ hashFiles('Makefile') }}

#      - name: Lint
#        uses: golangci/golangci-lint-action@v3
#        with:
#          args: --enable errorlint --timeout 3m0s --verbose
#          version: v1.49.0
#
#      - name: Lint
#        uses: golangci/golangci-lint-action@v3
#        with:
#          args: --disable-all --enable bodyclose --skip-dirs test
#          version: v1.49.0

#      - name: Unit Tests
#        run: make test

#      - name: Check for unstaged changes
#        run: git diff --name-only --exit-code

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Local Dependencies
        run: |
          make oc operator-sdk
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Kind
        run: go install sigs.k8s.io/kind@v0.14.0

#      - name: Create Kind Cluster
#        run: ./scripts/ci/kind-with-olm.sh

#      - name: Build Image
#        run: make operator-build operator-push IMG=${{ env.CONFIG_LISTENER_IMAGE }}

#      - name: E2E Integration tests
#        run: make infinispan-test PARALLEL_COUNT=5

#      - name: Create OLM Catalog Source
#        run: ./scripts/ci/install-catalog-source.sh
#
#      - name: Run Upgrade Tests
#        run: make upgrade-test SUBSCRIPTION_CHANNEL_SOURCE=2.2.x SUBSCRIPTION_STARTING_CSV=infinispan-operator.v2.2.5

      - name: Build Image but don't push
        run: make operator-build IMG=${{ env.CONFIG_LISTENER_IMAGE }}

      - name: Run XSite Tests
        run: |
          docker pull quay.io/infinispan/server:14.0
          scripts/ci/configure-xsite.sh
          make xsite-test

      - name: Inspect Cluster
        if: failure()
        run: oc adm inspect ns

      - name: Inspect Artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: oc-inspect
          path: inspect.*

      - name: Test Logs
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: ${{ env.TESTING_LOG_DIR }}
